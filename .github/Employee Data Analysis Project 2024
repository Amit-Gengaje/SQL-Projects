CREATE DATABASE IF NOT EXISTS employee;
USE employee;
SET SQL_SAFE_UPDATES = 0;
SELECT * FROM emp_record_table;
SELECT emp_id, first_name, last_name, gender, dept FROM emp_record_table;
SELECT emp_id, first_name, last_name, gender, dept, emp_rating FROM emp_record_table WHERE 
emp_rating <2
OR emp_rating >4
OR (emp_rating >=2 AND emp_rating <=4);
SELECT CONCAT(first_name, '  ', last_name) NAME 
FROM emp_record_table WHERE dept = 'FINANCE';
SELECT 
    COALESCE(manager_id, 'President') AS manager_id, 
    COUNT(*) AS number_of_reporters
FROM 
    emp_record_table
GROUP BY 
    manager_id
ORDER BY 
    manager_id;
Select first_name, last_name, dept FROM emp_record_table WHERE dept = 'HEALTHCARE' 
UNION 
SELECT first_name, last_name, dept FROM emp_record_table WHERE dept = 'FINANCE';
SELECT emp_id, first_name, last_name, role, dept, emp_rating, max(emp_rating) 
Over (partition by dept) AS max_emp_rating
FROM emp_record_table; 
Select role, MIN(salary) AS min_salary,
MAX(salary) AS max_salary
FROM emp_record_table
GROUP BY ROLE;
SELECT emp_id, first_name, last_name, exp, DENSE_RANK() OVER (ORDER BY EXP DESC) AS experience_rank 
FROM emp_record_table;
CREATE VIEW employee_location AS
SELECT emp_id, first_name, last_name, country, salary FROM emp_record_table WHERE salary > 6000;
SELECT * FROM employee_location;
SELECT * FROM emp_record_table WHERE emp_id
IN (SELECT emp_id FROM emp_record_table WHERE exp > 10);
CALL employee.exp_greater_than_three();
call employee.job_profile();
SELECT * FROM emp_record_table ORDER BY first_name;
DESCRIBE emp_record_table; 
ALTER TABLE emp_record_table modify first_name VARCHAR(50);
CREATE INDEX fname_index ON emp_record_table(first_name);
SHOW INDEXES FROM emp_record_table;
SELECT * from emp_record_table WHERE first_name = "Eric";
SELECT 
    EMP_ID,
    FIRST_NAME,
    LAST_NAME,
    SALARY,
    EMP_RATING,
    (0.05 * SALARY) * (EMP_RATING) AS BONUS
FROM
    emp_record_table;
SELECT *  , avg(salary) over (partition by country) AS country_wise, 
avg(salary) over (partition by continent) AS continent_wise 
FROM emp_record_table;
